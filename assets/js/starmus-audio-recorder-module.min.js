function e(e,t,n,i=console.log){if(!e)return console.error("StateEnforcer Init: The button element provided is invalid."),null;const o=()=>document.getElementById(e.id),r=()=>["granted","prompt"].includes(t?.[n]),s=o();s&&(s.disabled=!r());const a=new MutationObserver((e=>{const t=o();if(t)for(const n of e)if("attributes"===n.type&&"disabled"===n.attributeName){const e=r();t.disabled&&e?(i(`StateEnforcer (Mutation): Button for ID ${t.id} was disabled externally — re-enabling.`),t.disabled=!1):t.disabled||e||(i(`StateEnforcer (Mutation): Button for ID ${t.id} enabled while permission is denied — disabling.`),t.disabled=!0)}}));return a.observe(e,{attributes:!0,attributeFilter:["disabled"]}),i(`StateEnforcer: MutationObserver is now active on button ID "${e.id}".`),[1500,3e3,5e3].forEach((e=>{setTimeout((()=>{const e=o();e&&(e.disabled=!r())}),e)})),a}window.StarmusAudioRecorder=function(){"use strict";let t,n,i={formInstanceId:null,recordButtonId:"recordButton",pauseButtonId:"pauseButton",deleteButtonId:"deleteButton",timerDisplayId:"sparxstar_timer",audioPlayerId:"sparxstar_audioPlayer",statusDisplayId:"sparxstar_status",levelBarId:"sparxstar_audioLevelBar",uuidFieldId:"audio_uuid",fileInputId:"audio_file",submitButtonId:"submit_button",recorderContainerSelector:"[data-enabled-recorder]",logPrefix:"STARMUS:"},o={},r={micPermission:"prompt"},s={},a=null,u=[],d=!1,l=!1,c=0,p=null;function m(...e){console.log(i.logPrefix,...e)}function f(...e){console.warn(i.logPrefix,...e)}function y(...e){console.error(i.logPrefix,...e)}function I(e){const t=Math.floor(e/1e3),n=Math.floor(t/60),i=t%60;return`${String(n).padStart(2,"0")}:${String(i).padStart(2,"0")}`}function b(e,t="info"){if(o.statusDisplay&&"string"==typeof e){const n=o.statusDisplay.querySelector(".sparxstar_status__text");n&&(n.textContent=e),o.statusDisplay.className=`sparxstar_status ${t}`,o.statusDisplay.classList.remove("sparxstar_visually_hidden")}}function B(e,t){const n=function(){try{if(crypto&&crypto.randomUUID)return crypto.randomUUID();if(crypto&&crypto.getRandomValues){const e=new Uint8Array(16);crypto.getRandomValues(e),e[6]=15&e[6]|64,e[8]=63&e[8]|128;const t=Array.from(e,(e=>e.toString(16).padStart(2,"0")));return`${t.slice(0,4).join("")}-${t.slice(4,6).join("")}-${t.slice(6,8).join("")}-${t.slice(8,10).join("")}-${t.slice(10).join("")}`}}catch(t){y("Crypto API failed during UUID generation, falling back.",t)}f("Generating AudioID using Math.random() for compatibility.");let e=(new Date).getTime()+(performance?.now()||0);return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(t=>{const n=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===t?n:3&n|8).toString(16)}))}(),i=`recording_${n}.${t}`;m(`Attaching audio to form with filename: ${i}`),o.uuidField&&(o.uuidField.value=n);try{const t=new DataTransfer,n=new File([e],i,{type:e.type});t.items.add(n),o.fileInput.files=t.files,o.fileInput.files.length>0&&o.submitButton&&(o.submitButton.disabled=!1,m("Submit button enabled."))}catch(s){y("Failed to attach file using DataTransfer API.",s),b("Error attaching file. Your browser may not be supported.","error")}const r=new CustomEvent("starmusAudioReady",{detail:{audioId:n,fileName:i,durationMs:c}});o.container.dispatchEvent(r)}function g(){clearInterval(p),c=0,o.timerDisplay&&(o.timerDisplay.textContent="00:00"),o.recordButton&&(o.recordButton.disabled=!["granted","prompt"].includes(r.micPermission),o.recordButton.textContent="Record",o.recordButton.setAttribute("aria-pressed","false")),o.pauseButton&&(o.pauseButton.disabled=!0),o.deleteButton&&o.deleteButton.classList.add("sparxstar_visually_hidden"),o.submitButton&&(o.submitButton.disabled=!0),o.audioPlayer&&(o.audioPlayer.src&&o.audioPlayer.src.startsWith("blob:")&&URL.revokeObjectURL(o.audioPlayer.src),o.audioPlayer.src="",o.audioPlayer.classList.add("sparxstar_visually_hidden")),b("Ready to record.")}function x(e){e.data.size>0&&u.push(e.data)}function h(){if(m("handleStop called. Finalizing recording."),clearInterval(p),!t||0===u.length)return b("Recording stopped, but no audio was captured.","info"),void v.cleanup(i.formInstanceId);const e=t.mimeType,r=e.includes("opus")||e.includes("webm")?"webm":"m4a",s=new Blob(u,{type:e}),a=URL.createObjectURL(s);o.audioPlayer&&(o.audioPlayer.src=a,o.audioPlayer.controls=!0,o.audioPlayer.classList.remove("sparxstar_visually_hidden")),B(s,r),d=!1,l=!1,o.recordButton&&(o.recordButton.disabled=!1),o.pauseButton&&(o.pauseButton.disabled=!0),o.deleteButton&&(o.deleteButton.disabled=!1,o.deleteButton.classList.remove("sparxstar_visually_hidden")),n&&(n.getTracks().forEach((e=>e.stop())),n=null)}const v={init:async function(e={}){return Object.assign(i,e),i.formInstanceId?(m(`Initializing recorder module for instance: ${i.formInstanceId}`),function(){const e=e=>`${e}_${i.formInstanceId}`,t={container:`starmus_audioWrapper_${i.formInstanceId}`,recordButton:e(i.recordButtonId),pauseButton:e(i.pauseButtonId),deleteButton:e(i.deleteButtonId),timerDisplay:e(i.timerDisplayId),audioPlayer:e(i.audioPlayerId),statusDisplay:e(i.statusDisplayId),uuidField:e(i.uuidFieldId),fileInput:e(i.fileInputId),submitButton:e(i.submitButtonId)};return Object.keys(t).forEach((e=>{o[e]=document.getElementById(t[e])})),![o.container,o.recordButton,o.pauseButton,o.uuidField,o.fileInput].some((e=>!e))||(y("One or more essential UI elements are missing from the DOM."),!1)}()?(this.setupEventListeners(),this.setupPermissionsAndUI()):(y("One or more essential UI elements are missing. Cannot initialize."),!1)):(y("`formInstanceId` is missing in config. Initialization failed."),!1)},setupEventListeners:function(e=!1){if(!o.recordButton||!o.pauseButton||!o.deleteButton)return;s.recordClick=s.recordClick||(()=>d?this.stop():this.start()),s.pauseClick=s.pauseClick||(()=>d&&(l?this.resume():this.pause())),s.deleteClick=s.deleteClick||(()=>this.cleanup(i.formInstanceId));const t=e?"removeEventListener":"addEventListener";o.recordButton[t]("click",s.recordClick),o.pauseButton[t]("click",s.pauseClick),o.deleteButton[t]("click",s.deleteClick)},setupPermissionsAndUI:async function(){if(g(),!navigator.permissions?.query)return f("Permissions API not supported. Button enabled by default."),r.micPermission="prompt",o.recordButton&&(o.recordButton.disabled=!1),!0;try{const t=await navigator.permissions.query({name:"microphone"});return r.micPermission=t.state,m(`Initial microphone permission state: ${r.micPermission}`),t.onchange=()=>{r.micPermission=t.state,m(`Permission changed to: ${r.micPermission}`),o.recordButton&&(o.recordButton.disabled=!["granted","prompt"].includes(r.micPermission))},a&&a.disconnect(),o.recordButton&&(a=e(o.recordButton,r,"micPermission",m)),!0}catch(t){return y("Permissions API query failed:",t),r.micPermission="prompt",o.recordButton&&(o.recordButton.disabled=!1),!1}},start:async function(){if(!d)if(m("start() called."),navigator.mediaDevices?.getUserMedia&&window.MediaRecorder)try{const e=await navigator.mediaDevices.getUserMedia({audio:!0});n=e,u=[];const i=["audio/webm;codecs=opus","audio/mp4"].find(MediaRecorder.isTypeSupported)||"audio/webm";t=new MediaRecorder(e,{mimeType:i}),t.ondataavailable=x,t.onstop=h,t.start(1e3);const r=Date.now();p=setInterval((()=>{c=Date.now()-r,o.timerDisplay&&(o.timerDisplay.textContent=I(c))}),1e3),d=!0,l=!1,o.recordButton&&(o.recordButton.textContent="Stop"),o.pauseButton&&(o.pauseButton.disabled=!1),b("Recording...","info")}catch(e){y("getUserMedia error:",e.name,e.message);b("NotAllowedError"===e.name?"Microphone permission denied.":"Could not find a microphone.","error")}else b("Audio recording is not supported on your browser.","error")},stop:function(){d&&"inactive"!==t?.state&&t.stop()},pause:function(){d&&!l&&"recording"===t?.state&&(t.pause(),clearInterval(p),l=!0,o.pauseButton&&(o.pauseButton.textContent="Resume"),b("Recording paused.","info"))},resume:function(){if(d&&l&&"paused"===t?.state){t.resume();const e=Date.now();p=setInterval((()=>{const t=Date.now()-e;o.timerDisplay&&(o.timerDisplay.textContent=I(c+t))}),1e3),l=!1,o.pauseButton&&(o.pauseButton.textContent="Pause"),b("Recording resumed.","info")}},cleanup:function(e){m(`Cleanup called for instance: ${e}`),d&&this.stop(),n&&(n.getTracks().forEach((e=>e.stop())),n=null),u=[],d=!1,l=!1,g(),o.uuidField&&(o.uuidField.value=""),o.fileInput&&(o.fileInput.value="")},destroy:function(){m("Destroying recorder instance."),this.cleanup(i.formInstanceId),this.setupEventListeners(!0),a?.disconnect(),a=null,o={}},getAudioId:function(){return o.uuidField?o.uuidField.value:null}};return v}();
//# sourceMappingURL=starmus-audio-recorder-module.min.js.map
