function createButtonStateEnforcer(t,e,r,o=console.log){if(!t)return null;const n=()=>document.getElementById(t.id),i=()=>["granted","prompt"].includes(e?.[r]),s=n();s&&(s.disabled=!i());const a=new MutationObserver((t=>{const e=n();if(e)for(const r of t)if("attributes"===r.type&&"disabled"===r.attributeName){const t=i();e.disabled&&t?(o(`StateEnforcer (Mutation): Button for ID ${e.id} was disabled externally — re-enabling.`),e.disabled=!1):e.disabled||t||(o(`StateEnforcer (Mutation): Button for ID ${e.id} enabled while permission is denied — disabling.`),e.disabled=!0)}}));return a.observe(t,{attributes:!0,attributeFilter:["disabled"]}),o(`StateEnforcer: MutationObserver is now active on button ID "${t.id}".`),[1500,3e3,5e3].forEach((t=>{setTimeout((()=>{const t=n();t&&(t.disabled=!i())}),t)})),a}const StarmusAudioRecorder=function(){"use strict";let t,e,r={formInstanceId:null,recordButtonId:"recordButton",pauseButtonId:"pauseButton",deleteButtonId:"deleteButton",timerDisplayId:"sparxstar_timer",audioPlayerId:"sparxstar_audioPlayer",statusDisplayId:"sparxstar_status",levelBarId:"sparxstar_audioLevelBar",uuidFieldId:"audio_uuid",fileInputId:"audio_file",submitButtonId:"submit_button",recorderContainerSelector:"[data-enabled-recorder]",logPrefix:"STARMUS:"},o={},n={micPermission:"prompt"},i={},s=null,a=[],u=!1,d=!1,c=0;function l(...t){}function p(t){if(o.statusDisplay&&"string"==typeof t){const e=String(t).replace(/[<>"'&\r\n]/g,(t=>({"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","&":"&amp;","\r":" ","\n":" "}[t]||t)));(o.statusDisplay.querySelector(".sparxstar_status__text")||o.statusDisplay).textContent=e,o.statusDisplay.classList.remove("sparxstar_visually_hidden")}}function m(t,e){const r=function(){try{if(crypto&&crypto.randomUUID)return crypto.randomUUID();if(crypto&&crypto.getRandomValues){const t=new Uint8Array(16);crypto.getRandomValues(t),t[6]=15&t[6]|64,t[8]=63&t[8]|128;const e=e=>t[e].toString(16).padStart(2,"0");return`${e(0)}${e(1)}${e(2)}${e(3)}-${e(4)}${e(5)}-${e(6)}${e(7)}-${e(8)}${e(9)}-${e(10)}${e(11)}${e(12)}${e(13)}${e(14)}${e(15)}`}}catch(e){}let t=(new Date).getTime()+(performance?.now()||0);return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const r=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"===e?r:3&r|8).toString(16)}))}(),n=`audio_${r}.${e}`;if(o.uuidField&&(o.uuidField.value=r),!o.fileInput)return;try{const e=new DataTransfer,r=new File([t],n,{type:t.type});e.items.add(r),o.fileInput.files=e.files,o.fileInput.files.length>0&&o.submitButton&&(o.submitButton.disabled=!1)}catch(s){p("Error attaching file. Your browser may not be supported.")}const i=new CustomEvent("starmusAudioReady",{detail:{audioId:r,fileName:n,durationMs:c}});o.container.dispatchEvent(i)}function f(){o.recordButton&&(o.recordButton.disabled=!["granted","prompt"].includes(n.micPermission),o.recordButton.textContent="Record",o.recordButton.setAttribute("aria-pressed","false")),o.pauseButton&&(o.pauseButton.disabled=!0),o.deleteButton&&o.deleteButton.classList.add("sparxstar_visually_hidden"),o.submitButton&&(o.submitButton.disabled=!0),o.audioPlayer&&(o.audioPlayer.src&&o.audioPlayer.src.startsWith("blob:")&&URL.revokeObjectURL(o.audioPlayer.src),o.audioPlayer.src="",o.audioPlayer.classList.add("sparxstar_visually_hidden")),p("Ready to record.")}function y(t){t.data.size>0&&a.push(t.data)}function B(){if(!t||0===a.length)return p("Recording stopped, no audio captured."),void b.cleanup();const r=t.mimeType,i=r.includes("opus")||r.includes("webm")?"webm":"m4a",s=new Blob(a,{type:r}),c=URL.createObjectURL(s);o.audioPlayer&&(o.audioPlayer.src&&o.audioPlayer.src.startsWith("blob:")&&URL.revokeObjectURL(o.audioPlayer.src),o.audioPlayer.src=c,o.audioPlayer.controls=!0,o.audioPlayer.classList.remove("sparxstar_visually_hidden")),m(s,i),u=!1,d=!1,o.recordButton&&(o.recordButton.disabled=!["granted","prompt"].includes(n.micPermission)),o.pauseButton&&(o.pauseButton.disabled=!0),o.deleteButton&&(o.deleteButton.disabled=!1,o.deleteButton.classList.remove("sparxstar_visually_hidden")),e&&(e.getTracks().forEach((t=>t.stop())),e=null)}const b={init:async function(t={}){return Object.assign(r,t),!!r.formInstanceId&&(!!function(){const t=t=>`${t}_${r.formInstanceId}`,e={container:`starmus_audioWrapper_${r.formInstanceId}`,recordButton:t(r.recordButtonId),pauseButton:t(r.pauseButtonId),deleteButton:t(r.deleteButtonId),timerDisplay:t(r.timerDisplayId),audioPlayer:t(r.audioPlayerId),statusDisplay:t(r.statusDisplayId),uuidField:t(r.uuidFieldId),fileInput:t(r.fileInputId),submitButton:t(r.submitButtonId)};return Object.keys(e).forEach((t=>{o[t]=document.getElementById(e[t])})),o.container&&o.recordButton&&o.pauseButton&&o.timerDisplay&&o.audioPlayer&&o.statusDisplay}()&&(this.setupEventListeners(),this.setupPermissionsAndUI()))},setupEventListeners:function(t=!1){if(!o.recordButton||!o.pauseButton||!o.deleteButton)return;i.recordClick=i.recordClick||(()=>u?this.stop():this.start()),i.pauseClick=i.pauseClick||(()=>u&&(d?this.resume():this.pause())),i.deleteClick=i.deleteClick||(()=>this.cleanup());const e=t?"removeEventListener":"addEventListener";o.recordButton[e]("click",i.recordClick),o.pauseButton[e]("click",i.pauseClick),o.deleteButton[e]("click",i.deleteClick)},setupPermissionsAndUI:async function(){if(f(),!navigator.permissions?.query)return n.micPermission="prompt",o.recordButton&&(o.recordButton.disabled=!1),!0;try{const t=await navigator.permissions.query({name:"microphone"});return n.micPermission=t.state,n.micPermission,t.onchange=()=>{n.micPermission=t.state,n.micPermission,o.recordButton&&(o.recordButton.disabled=!["granted","prompt"].includes(n.micPermission))},s&&s.disconnect(),o.recordButton&&(s=createButtonStateEnforcer(o.recordButton,n,"micPermission",l)),!0}catch(t){return n.micPermission="prompt",o.recordButton&&(o.recordButton.disabled=!1),!1}},start:async function(){if(!navigator.mediaDevices?.getUserMedia||!window.MediaRecorder)return p("Audio recording is not supported on your browser.");try{const r=await navigator.mediaDevices.getUserMedia({audio:!0});e=r,a=[];const n=["audio/webm;codecs=opus","audio/mp4"].find(MediaRecorder.isTypeSupported)||"audio/webm";t=new MediaRecorder(r,{mimeType:n}),t.ondataavailable=y,t.onstop=B,t.start(),u=!0,d=!1,o.recordButton&&(o.recordButton.textContent="Stop"),o.pauseButton&&(o.pauseButton.disabled=!1),p("Recording...")}catch(r){r.name,p("NotAllowedError"===r.name?"Microphone permission denied.":"No microphone found.")}},stop:function(){u&&"inactive"!==t?.state&&t.stop()},pause:function(){u&&!d&&"recording"===t?.state&&(t.pause(),d=!0,o.pauseButton&&(o.pauseButton.textContent="Resume"),p("Recording paused."))},resume:function(){u&&d&&"paused"===t?.state&&(t.resume(),d=!1,o.pauseButton&&(o.pauseButton.textContent="Pause"),p("Recording resumed."))},cleanup:function(){u&&this.stop(),e&&e.getTracks().forEach((t=>t.stop())),a=[],u=!1,d=!1,f(),o.uuidField&&(o.uuidField.value=""),o.fileInput&&(o.fileInput.value="")},destroy:function(){this.cleanup(),this.setupEventListeners(!0),o.audioPlayer?.src.startsWith("blob:")&&URL.revokeObjectURL(o.audioPlayer.src),s?.disconnect(),s=null,o={}},getAudioId:function(){return o.uuidField?o.uuidField.value:null}};return window.addEventListener("offline",(()=>u&&(p("Network offline. Recording paused."),b.pause()))),window.addEventListener("online",(()=>a.length>0&&p("Network restored. You can now submit your recording."))),b}();
//# sourceMappingURL=starmus-audio-editor.min.js.map