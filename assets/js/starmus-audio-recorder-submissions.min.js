document.addEventListener("DOMContentLoaded",(()=>{"use strict";const e={LOG_PREFIX:"STARMUS_FORM:",DB_NAME:"starmus_audio_queue",STORE_NAME:"queue",CHUNK_SIZE:524288,DEBUG_MODE:new URLSearchParams(window.location.search).has("starmus_debug")};console.log(e.LOG_PREFIX,"DOM fully loaded. Initializing audio form submissions.");let t="indexedDB"in window;const o=t?new Promise((o=>{const a=indexedDB.open(e.DB_NAME,1);a.onupgradeneeded=t=>{const o=t.target.result;o.objectStoreNames.contains(e.STORE_NAME)||o.createObjectStore(e.STORE_NAME,{keyPath:"id"})},a.onsuccess=()=>o(a.result),a.onerror=a=>{console.error(e.LOG_PREFIX,"IndexedDB failed to open. Falling back to localStorage.",a.target.error),t=!1,o(null)}})):Promise.resolve(null);function a(e){const t=e.split(","),o=t[0].match(/:(.*?);/)[1],a=atob(t[1]),n=new Uint8Array(a.length);for(let r=0;r<a.length;r++)n[r]=a.charCodeAt(r);return new Blob([n],{type:o})}async function n(a){if(t)try{const t=(await o).transaction(e.STORE_NAME,"readwrite");return t.objectStore(e.STORE_NAME).put(a),new Promise(((e,o)=>{t.oncomplete=e,t.onerror=()=>o(t.error)}))}catch(d){console.error(e.LOG_PREFIX,"IndexedDB put failed. Retrying with localStorage.",d),t=!1}const n=JSON.parse(localStorage.getItem(e.DB_NAME)||"[]"),r=await async function(e){return new Promise(((t,o)=>{const a=new FileReader;a.onloadend=()=>t(a.result),a.onerror=o,a.readAsDataURL(e)}))}(a.audio),s={...a,audioData:r,audio:void 0},i=n.findIndex((e=>e.id===a.id));i>-1?n[i]=s:n.push(s),localStorage.setItem(e.DB_NAME,JSON.stringify(n))}async function r(){if(t)try{const t=await o;return new Promise(((o,a)=>{const n=t.transaction(e.STORE_NAME,"readonly").objectStore(e.STORE_NAME).getAll();n.onsuccess=()=>o(n.result||[]),n.onerror=()=>a(n.error)}))}catch(n){console.error(e.LOG_PREFIX,"IndexedDB getAll failed. Retrying with localStorage.",n),t=!1}return JSON.parse(localStorage.getItem(e.DB_NAME)||"[]").map((e=>({...e,audio:a(e.audioData)})))}async function s(a){let r=a.uploadedBytes||0;for(;r<a.audio.size;){if(!navigator.onLine)return console.warn(e.LOG_PREFIX,"Upload paused: connection lost."),await n({...a,uploadedBytes:r}),!1;const t=a.audio.slice(r,r+e.CHUNK_SIZE),o=new FormData;for(const e in a.wordpressData)o.append(e,a.wordpressData[e]);for(const e in a.meta)o.append(e,a.meta[e]);o.append(a.audioField,t,a.meta.fileName||"audio.webm"),o.append("chunk_offset",r),o.append("total_size",a.audio.size);try{const n=await fetch(a.ajaxUrl,{method:"POST",body:o});if(!n.ok){const e=await n.json().catch((()=>null)),t=e?.data?.message||`Server responded with status ${n.status}`;throw new Error(t)}const s=await n.json();if(!s.success)throw new Error(s?.data?.message||"Server returned a failure response.");r+=t.size,console.log(e.LOG_PREFIX,`Chunk uploaded. Progress: ${r}/${a.audio.size}`)}catch(s){return console.error(e.LOG_PREFIX,"Chunk upload failed. Queuing submission for later.",s),await n({...a,uploadedBytes:r}),!1}}return console.log(e.LOG_PREFIX,`Upload complete for item ${a.id}. Removing from queue.`),await async function(a){if(t)try{const t=(await o).transaction(e.STORE_NAME,"readwrite");return t.objectStore(e.STORE_NAME).delete(a),new Promise(((e,o)=>{t.oncomplete=e,t.onerror=()=>o(t.error)}))}catch(s){console.error(e.LOG_PREFIX,"IndexedDB delete failed. Retrying with localStorage.",s),t=!1}const n=JSON.parse(localStorage.getItem(e.DB_NAME)||"[]");localStorage.setItem(e.DB_NAME,JSON.stringify(n.filter((e=>e.id!==a))))}(a.id),!0}let i=!1;async function d(){if(i||!navigator.onLine)return;i=!0;const t=document.getElementById("starmus_queue_retry");t&&(t.disabled=!0),console.log(e.LOG_PREFIX,"Processing offline queue...");const o=await r();if(o.length>0)for(const a of o){if(!await s(a)){console.warn(e.LOG_PREFIX,"Queue processing paused due to an upload failure.");break}}i=!1,t&&(t.disabled=!1),await c()}const u=document.createElement("div");async function c(){const e=await r(),t=document.getElementById("starmus_queue_count");e.length>0?(t.textContent=`${e.length} recording${e.length>1?"s are":" is"} pending upload.`,u.classList.remove("starmus_visually_hidden")):u.classList.add("starmus_visually_hidden")}u.id="starmus_queue_banner",u.className="starmus_status starmus_visually_hidden",u.setAttribute("aria-live","polite"),u.innerHTML='<span class="starmus_status__text" id="starmus_queue_count"></span> <button type="button" id="starmus_queue_retry" class="button">Retry Uploads</button>',document.body.appendChild(u),document.getElementById("starmus_queue_retry").addEventListener("click",d),window.addEventListener("online",d),c(),navigator.onLine&&setTimeout(d,2e3);const l=document.querySelectorAll("[data-enabled-recorder]");0!==l.length&&l.forEach((t=>{const o=t.id.substring(21),a=document.getElementById(o),n=(e,t="info",a=!0,n=!1)=>{const r=document.getElementById(`sparxstar_status_${o}`);if(r){const o=r.querySelector(".sparxstar_status__text");o&&(o.textContent=e),r.className=`sparxstar_status ${t}`,a&&r.classList.remove("sparxstar_visually_hidden")}if(n){const e=document.getElementById(`submit_button_${o}`);e&&(e.disabled=!1)}};if(!a)return console.error(e.LOG_PREFIX,`Form element not found for instance ID: ${o}.`);"function"==typeof StarmusAudioRecorder?.init?StarmusAudioRecorder.init({formInstanceId:o}).then((t=>{t?console.log(e.LOG_PREFIX,`Recorder module initialized successfully for ${o}.`):n("Recorder failed to load.","error")})):(console.error(e.LOG_PREFIX,"StarmusAudioRecorder module is not available."),n("Critical error: Recorder unavailable.","error")),a.addEventListener("submit",(async t=>{t.preventDefault();const r=document.getElementById(`audio_uuid_${o}`),i=document.getElementById(`audio_file_${o}`),d=document.getElementById(`audio_consent_${o}`),u=document.getElementById(`submit_button_${o}`),l=document.getElementById(`sparxstar_loader_overlay_${o}`);if(!r?.value||!i?.files?.length)return n("Error: No audio file has been recorded or selected to submit.","error");if(d&&!d.checked)return n("Error: You must provide consent to submit.","error");u&&(u.disabled=!0),l&&l.classList.remove("sparxstar_visually_hidden");const m=new FormData(a),_={};m.forEach(((e,t)=>{e instanceof File||(_[t]=e)}));const f={action:starmusFormData?.action,nonce:starmusFormData?.nonce},p={id:r.value,meta:_,wordpressData:f,audio:i.files[0],ajaxUrl:starmusFormData?.ajax_url||"/wp-admin/admin-ajax.php",audioField:i.name,uploadedBytes:0};e.DEBUG_MODE&&console.log(e.LOG_PREFIX,"--- Submission Data ---",p);const E=await s(p);l&&l.classList.add("sparxstar_visually_hidden"),E?(n("Successfully submitted!","success"),a.reset(),"function"==typeof StarmusAudioRecorder?.cleanup&&StarmusAudioRecorder.cleanup(o),"function"==typeof window.onStarmusSubmitSuccess&&window.onStarmusSubmitSuccess(o,{message:"Success"})):(n("Connection issue. Your recording has been saved and will be uploaded automatically when you are back online.","info",!0,!0),a.reset(),"function"==typeof StarmusAudioRecorder?.cleanup&&StarmusAudioRecorder.cleanup(o),await c())}))}))}));
//# sourceMappingURL=starmus-audio-recorder-submissions.min.js.map
