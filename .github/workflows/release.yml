name: Release

on:
  push:
    tags: ['v*']

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify plugin entrypoint
        run: |
          test -f starmus-audio-recorder.php || { echo "Missing starmus-audio-recorder.php"; exit 1; }
          grep -q "Plugin Name:" starmus-audio-recorder.php || { echo "No plugin header found"; exit 1; }

      - name: Read version from header
        id: vers
        run: |
          VER=$(grep -E "^\s*\*\s*Version:\s*" starmus-audio-recorder.php | sed -E 's/.*Version:\s*//')
          echo "version=${VER:-${GITHUB_REF_NAME#v}}" >> $GITHUB_OUTPUT

      - name: Set up PHP
        uses: shivammathur/setup-php@ec406be512d7077f68eed36e63f4d91bc006edc4
        with:
          php-version: '8.2'
          tools: composer:v2
          coverage: none

      - name: Install PHP dependencies (no-dev)
        run: |
          composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader
          test -f vendor/autoload.php || { echo "vendor/autoload.php missing (did .distignore exclude vendor/?)"; exit 1; }

        # Optional: build frontend if you rely on a build step
      - name: Build assets
        run: |
          npm ci
          npm run build

      - name: Ensure .distignore exists
        run: test -f .distignore || { echo ".distignore is missing"; exit 1; }

      - name: Build plugin ZIP (uses .distignore; DO NOT exclude vendor/)
        run: |
          SLUG="starmus-audio-recorder"
          mkdir -p build
          rsync -a --delete --exclude-from=.distignore ./ build/${SLUG}/
          (cd build && zip -r "../${SLUG}-${{ steps.vers.outputs.version }}.zip" "${SLUG}")

      - name: Generate checksums
        run: |
          sha256sum "starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip" > "starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip.sha256"
          sha1sum   "starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip" > "starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip.sha1"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-zip
          path: |
            starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip
            starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip.sha256
            starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip.sha1

      - name: Create GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          files: |
            starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip
            starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip.sha256
            starmus-audio-recorder-${{ steps.vers.outputs.version }}.zip.sha1
          body: 'Automated release.'
